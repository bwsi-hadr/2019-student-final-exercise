global add_supply
def reset_supply():
  global add_supply
  add_supply = pd.DataFrame(columns=['objectid','type','food_water','medicine','fuel'])
def init_supply():
  global add_supply
  add_supply.loc[0,'objectid']=0
  add_supply.fillna(0)
def unpack_powerplants(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
        #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='power_plant'
    add_supply.loc[idx, 'food_water']=0
    add_supply.loc[idx, 'medicine']=0
    add_supply.loc[idx, 'fuel']=300
    add_supply.loc[idx, 'objectid']=idx
      #existing.append(add_supply).to_csv(f)
      #reset_supply()
def unpack_airfields(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
    #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='airfield'
    add_supply.loc[idx, 'food_water']=0
    add_supply.loc[idx, 'medicine']=0
    add_supply.loc[idx, 'fuel']=90
    add_supply.loc[idx, 'objectid']=idx
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def unpack_large_hospitals(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
    #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='large_hospital'
    add_supply.loc[idx, 'food_water']=300
    add_supply.loc[idx, 'medicine']=300
    add_supply.loc[idx, 'fuel']=0
    add_supply.loc[idx, 'objectid']=idx
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def unpack_small_hospitals(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
    #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='small_hospital'
    add_supply.loc[idx, 'food_water']=150
    add_supply.loc[idx, 'medicine']=150
    add_supply.loc[idx, 'fuel']=0
    add_supply.loc[idx, 'objectid']=idx
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def unpack_shelters(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
    #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='shelter'
    add_supply.loc[idx, 'food_water']=100
    add_supply.loc[idx, 'medicine']=0
    add_supply.loc[idx, 'fuel']=0
    add_supply.loc[idx, 'objectid']=idx
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def unpack_cell_tower(locations):
  global add_supply
  #with open('resources.csv','w+') as f:
    #filew = csv.writer(f,delimiter=',')
    #filew.writerow(['objectid','type','food_water','medicine','fuel'])
  for i,idx in enumerate(locations):
    #filew.writerow([idx,'airfield',0,0,300])
    add_supply.loc[idx, 'type']='shelter'
    add_supply.loc[idx, 'food_water']=0
    add_supply.loc[idx, 'medicine']=0
    add_supply.loc[idx, 'fuel']=0
    add_supply.loc[idx, 'objectid']=idx
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def add_resources(destind, desttype, foodwater, medicine, fuel):
  global add_supply
  add_supply.loc[destind, 'type'] = desttype
  add_supply = add_supply.fillna(0)
  print(add_supply)
  add_supply.loc[destind, 'food_water'] += foodwater
  add_supply.loc[destind, 'medicine'] += medicine
  add_supply.loc[destind, 'fuel'] += fuel
  add_supply.loc[destind, 'objectid'] = destind
    #existing.append(add_supply).to_csv(f)
    #reset_supply()
def finalize(exist):
  global add_supply
  if exist:
    existing = pd.DataFrame.from_csv('resources.csv')
    new = existing.append(add_supply).fillna(0)
    new.to_csv('resources.csv')
    print(new)
    reset_supply()
  else:
    add_supply.copy().to_csv('resources.csv')
    reset_supply()
